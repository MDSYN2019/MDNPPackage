* BioExcel white paper notes 

+ Do you need to write correct software for your science? 
+ Will your software need to change over time?
+ Do you need to make your software faster, or more scalable?
+ How will your users learn how to use your software?
+ How will you convince people to invest in your software?
+ What will happen when the original author moves to a new project?






* Python - software related work 

** Creating pyproject.toml

pyproject.toml tells frontend 

pyproject.toml tells “frontend” build tools like pip and build 
what "backend" tool to use to create distribution packages for your project. You can choose from a number of backends; this tutorial uses Hatchling by default, but it will work identically with setuptools, Flit, PDM, and others that support the [project] table for metadata.

** Creating a License 

It's important for every package uploaded to the Python Package 
Index to include a license. This tells users who installs your 
package the terms which they can use your package. Once you have 
chosen a license, open LICENSE and enter the licene text. 

** Generating distribution archives 

The next step is to generate distribution packages for your package. These are archives that 
are uploaded to the Python package and can be installed with pip 

